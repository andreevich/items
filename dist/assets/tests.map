{"version":3,"sources":["emprice/tests/adapters/application.jshint.js","emprice/tests/app.jshint.js","emprice/tests/controllers/menus/new.jshint.js","emprice/tests/controllers/menus/submenus.jshint.js","emprice/tests/controllers/menus.jshint.js","emprice/tests/controllers/prices/new.jshint.js","emprice/tests/controllers/prices.jshint.js","emprice/tests/helpers/destroy-app.js","emprice/tests/helpers/destroy-app.jshint.js","emprice/tests/helpers/format-date.jshint.js","emprice/tests/helpers/module-for-acceptance.js","emprice/tests/helpers/module-for-acceptance.jshint.js","emprice/tests/helpers/resolver.js","emprice/tests/helpers/resolver.jshint.js","emprice/tests/helpers/start-app.js","emprice/tests/helpers/start-app.jshint.js","emprice/tests/models/menu.jshint.js","emprice/tests/models/price.jshint.js","emprice/tests/models/submenu.jshint.js","emprice/tests/router.jshint.js","emprice/tests/routes/charts.jshint.js","emprice/tests/routes/menus/new.jshint.js","emprice/tests/routes/menus/submenus/new.jshint.js","emprice/tests/routes/menus/submenus.jshint.js","emprice/tests/routes/menus.jshint.js","emprice/tests/routes/prices/new.jshint.js","emprice/tests/routes/prices.jshint.js","emprice/tests/test-helper.js","emprice/tests/test-helper.jshint.js","emprice/tests/unit/controllers/menus/new-test.js","emprice/tests/unit/controllers/menus/new-test.jshint.js","emprice/tests/unit/controllers/menus/submenus-test.js","emprice/tests/unit/controllers/menus/submenus-test.jshint.js","emprice/tests/unit/controllers/menus-test.js","emprice/tests/unit/controllers/menus-test.jshint.js","emprice/tests/unit/controllers/prices/new-test.js","emprice/tests/unit/controllers/prices/new-test.jshint.js","emprice/tests/unit/controllers/prices-test.js","emprice/tests/unit/controllers/prices-test.jshint.js","emprice/tests/unit/models/menu-test.js","emprice/tests/unit/models/menu-test.jshint.js","emprice/tests/unit/models/price-test.js","emprice/tests/unit/models/price-test.jshint.js","emprice/tests/unit/models/submenu-test.js","emprice/tests/unit/models/submenu-test.jshint.js","emprice/tests/unit/routes/charts-test.js","emprice/tests/unit/routes/charts-test.jshint.js","emprice/tests/unit/routes/menus/new-test.js","emprice/tests/unit/routes/menus/new-test.jshint.js","emprice/tests/unit/routes/menus/sub-test.js","emprice/tests/unit/routes/menus/sub-test.jshint.js","emprice/tests/unit/routes/menus-test.js","emprice/tests/unit/routes/menus-test.jshint.js","emprice/tests/unit/routes/prices/new-test.js","emprice/tests/unit/routes/prices/new-test.jshint.js","emprice/tests/unit/routes/prices-test.js","emprice/tests/unit/routes/prices-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('emprice/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/application.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('emprice/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('emprice/tests/controllers/menus/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/menus');\n  QUnit.test('controllers/menus/new.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/menus/new.js should pass jshint.');\n  });\n});","define('emprice/tests/controllers/menus/submenus.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/menus');\n  QUnit.test('controllers/menus/submenus.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/menus/submenus.js should pass jshint.\\ncontrollers/menus/submenus.js: line 9, col 28, Missing semicolon.\\ncontrollers/menus/submenus.js: line 10, col 17, \\'self\\' is defined but never used.\\ncontrollers/menus/submenus.js: line 7, col 27, \\'$\\' is not defined.\\ncontrollers/menus/submenus.js: line 8, col 22, \\'$\\' is not defined.\\n\\n4 errors');\n  });\n});","define('emprice/tests/controllers/menus.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/menus.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/menus.js should pass jshint.');\n  });\n});","define('emprice/tests/controllers/prices/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/prices');\n  QUnit.test('controllers/prices/new.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/prices/new.js should pass jshint.\\ncontrollers/prices/new.js: line 6, col 23, \\'$\\' is not defined.\\n\\n1 error');\n  });\n});","define('emprice/tests/controllers/prices.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/prices.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/prices.js should pass jshint.\\ncontrollers/prices.js: line 6, col 28, Missing semicolon.\\ncontrollers/prices.js: line 11, col 15, Missing semicolon.\\n\\n2 errors');\n  });\n});","define('emprice/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('emprice/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/destroy-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('emprice/tests/helpers/format-date.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/format-date.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'helpers/format-date.js should pass jshint.\\nhelpers/format-date.js: line 4, col 12, \\'moment\\' is not defined.\\n\\n1 error');\n  });\n});","define('emprice/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'emprice/tests/helpers/start-app', 'emprice/tests/helpers/destroy-app'], function (exports, _qunit, _empriceTestsHelpersStartApp, _empriceTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _empriceTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _empriceTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('emprice/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/module-for-acceptance.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('emprice/tests/helpers/resolver', ['exports', 'ember/resolver', 'emprice/config/environment'], function (exports, _emberResolver, _empriceConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _empriceConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _empriceConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('emprice/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('emprice/tests/helpers/start-app', ['exports', 'ember', 'emprice/app', 'emprice/config/environment'], function (exports, _ember, _empriceApp, _empriceConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _empriceConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _empriceApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('emprice/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('emprice/tests/models/menu.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/menu.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/menu.js should pass jshint.');\n  });\n});","define('emprice/tests/models/price.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/price.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/price.js should pass jshint.\\nmodels/price.js: line 17, col 11, Expected \\'{\\' and instead saw \\'width\\'.\\nmodels/price.js: line 20, col 11, Expected \\'{\\' and instead saw \\'width\\'.\\nmodels/price.js: line 23, col 11, Expected \\'{\\' and instead saw \\'width\\'.\\nmodels/price.js: line 31, col 11, Expected \\'{\\' and instead saw \\'redPriceClass\\'.\\nmodels/price.js: line 34, col 11, Expected \\'{\\' and instead saw \\'redPriceClass\\'.\\nmodels/price.js: line 38, col 49, Unreachable \\';\\' after \\'return\\'.\\nmodels/price.js: line 38, col 49, Unnecessary semicolon.\\n\\n7 errors');\n  });\n});","define('emprice/tests/models/submenu.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/submenu.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/submenu.js should pass jshint.');\n  });\n});","define('emprice/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('emprice/tests/routes/charts.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/charts.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/charts.js should pass jshint.');\n  });\n});","define('emprice/tests/routes/menus/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/menus');\n  QUnit.test('routes/menus/new.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/menus/new.js should pass jshint.');\n  });\n});","define('emprice/tests/routes/menus/submenus/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/menus/submenus');\n  QUnit.test('routes/menus/submenus/new.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/menus/submenus/new.js should pass jshint.');\n  });\n});","define('emprice/tests/routes/menus/submenus.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/menus');\n  QUnit.test('routes/menus/submenus.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/menus/submenus.js should pass jshint.');\n  });\n});","define('emprice/tests/routes/menus.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/menus.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/menus.js should pass jshint.');\n  });\n});","define('emprice/tests/routes/prices/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/prices');\n  QUnit.test('routes/prices/new.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/prices/new.js should pass jshint.\\nroutes/prices/new.js: line 5, col 42, Missing semicolon.\\n\\n1 error');\n  });\n});","define('emprice/tests/routes/prices.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/prices.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/prices.js should pass jshint.\\nroutes/prices.js: line 5, col 43, Missing semicolon.\\n\\n1 error');\n  });\n});","define('emprice/tests/test-helper', ['exports', 'emprice/tests/helpers/resolver', 'ember-qunit'], function (exports, _empriceTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_empriceTestsHelpersResolver['default']);\n});","define('emprice/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/controllers/menus/new-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:menus/new', 'Unit | Controller | menus/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('emprice/tests/unit/controllers/menus/new-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/menus');\n  QUnit.test('unit/controllers/menus/new-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/menus/new-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/controllers/menus/submenus-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:menus/submenus', 'Unit | Controller | menus/submenus', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('emprice/tests/unit/controllers/menus/submenus-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/menus');\n  QUnit.test('unit/controllers/menus/submenus-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/menus/submenus-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/controllers/menus-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:menus', 'Unit | Controller | menus', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('emprice/tests/unit/controllers/menus-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/menus-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/menus-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/controllers/prices/new-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:prices/new', 'Unit | Controller | prices/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('emprice/tests/unit/controllers/prices/new-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/prices');\n  QUnit.test('unit/controllers/prices/new-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/prices/new-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/controllers/prices-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:prices', 'Unit | Controller | prices', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('emprice/tests/unit/controllers/prices-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/prices-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/prices-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/models/menu-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('menu', 'Unit | Model | menu', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('emprice/tests/unit/models/menu-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/menu-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/menu-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/models/price-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('price', 'Unit | Model | price', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('emprice/tests/unit/models/price-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/price-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/price-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/models/submenu-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('submenu', 'Unit | Model | submenu', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('emprice/tests/unit/models/submenu-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/submenu-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/submenu-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/routes/charts-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:charts', 'Unit | Route | charts', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('emprice/tests/unit/routes/charts-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/charts-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/charts-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/routes/menus/new-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:menus/new', 'Unit | Route | menus/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('emprice/tests/unit/routes/menus/new-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/menus');\n  QUnit.test('unit/routes/menus/new-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/menus/new-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/routes/menus/sub-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:menus/sub', 'Unit | Route | menus/sub', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('emprice/tests/unit/routes/menus/sub-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/menus');\n  QUnit.test('unit/routes/menus/sub-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/menus/sub-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/routes/menus-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:menus', 'Unit | Route | menus', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('emprice/tests/unit/routes/menus-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/menus-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/menus-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/routes/prices/new-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:prices/new', 'Unit | Route | prices/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('emprice/tests/unit/routes/prices/new-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/prices');\n  QUnit.test('unit/routes/prices/new-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/prices/new-test.js should pass jshint.');\n  });\n});","define('emprice/tests/unit/routes/prices-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:prices', 'Unit | Route | prices', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('emprice/tests/unit/routes/prices-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/prices-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/prices-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('emprice/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}